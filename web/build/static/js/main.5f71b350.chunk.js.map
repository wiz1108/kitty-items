{"version":3,"sources":["svg/Items lazy /^/.//item0.*/.svg$/ groupOptions: {} namespace object","reportWebVitals.js","theme.js","global/providers.comp.js","parts/base.comp.js","hooks/use-current-user.hook.js","svg/logo-kv.svg","global/constants.js","util/fetcher.js","hooks/use-market-items.hook.js","util/normalize-item.js","flow/fetch-account-items.script.js","hooks/use-account-items.hook.js","flow/is-account-initialized.script.js","flow/util/tx.js","flow/initialize-account.tx.js","util/sleep.js","flow/fetch-flow-balance.script.js","hooks/use-flow-balance.hook.js","flow/fetch-kibbles-balance.script.js","hooks/use-kibbles-balance.hook.js","hooks/use-initialized.hook.js","parts/auth-cluster.comp.js","parts/init-cluster.comp.js","util/fmt-kibbles.js","parts/balance-cluster.comp.js","flow/fetch-market-item.script.js","flow/buy-market-item.tx.js","flow/cancel-market-listing.tx.js","hooks/use-market-item.hook.js","flow/util/batch.js","flow/fetch-account-item.script.js","flow/create-sale-offer.tx.js","hooks/use-account-item.hook.js","parts/account-item-cluster.comp.js","parts/market-item-cluster.comp.js","parts/market-items-cluster.comp.js","parts/account-items-cluster.comp.js","svg/cookie.svg","svg/backpack.svg","pages/account/index.js","global/config.js","index.js","hooks/use-url-address.hook.js","pages/root.page.js","pages/not-found.page.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","fonts","body","heading","colors","Providers","children","StrictMode","Base","currentUser","atom","key","default","addr","loggedIn","cid","tools","logIn","fcl","logOut","signUp","changeUser","useCurrentUser","useRecoilState","user","setUser","useEffect","subscribe","LOADING","IDLE","PROCESSING","fetcher","url","fetch","res","json","$marketItemsState","$marketItemsStatus","useMarketItems","status","setStatus","items","setItems","useSWR","process","initialData","refreshInterval","onLoadingSlow","onSuccess","latestSaleOffers","item","assign","itemID","sale_item_id","typeID","sale_item_type","owner","sale_item_owner","price","sale_price","txID","transaction_id","normalizeItem","onError","error","console","log","asMap","Map","has","CODE","fetchAccountItems","address","Address","d","sort","a","b","$state","atomFamily","selectorFamily","get","$status","useAccountItems","mint","method","headers","JSON","stringify","recipient","Math","floor","random","refresh","cdc","isAccountInitialized","send","script","args","arg","decode","noop","tx","mods","opts","onStart","onSubmission","onUpdate","onComplete","txId","fvsTx","info","unsub","onceSealed","txStatus","env","initializeAccount","invariant","transaction","limit","proposer","authz","payer","authorizations","sleep","ms","setTimeout","fetchFlowBalance","balance","valueAtom","statusAtom","useFlowBalance","setBalance","fetchKibblesBalance","useKibblesBalance","amount","$init","$computedInit","all","Kibble","KittyItems","KittyItemsMarket","useInitialized","init","setInit","isInitialized","useRecoilValue","flow","kibble","recheck","initialize","AuthCluster","mb","src","Logo","size","as","A","mr","to","colorScheme","onClick","p","WrappedAuthCluster","fallback","fmtBool","bool","Check","color","Close","InitCluster","cu","maxW","borderWidth","borderRadius","mt","disabled","WrappedInitCluster","props","fmtKibbles","cur","String","replace","filter","Boolean","join","BalanceCluster","kibbles","isNumeric","WrappedBalanceCluster","fetchMarketItem","t","Number","buyMarketItem","ownerAddress","cancelMarketListing","expand","split","useMarketItem","ownerItems","cuItems","comp","setItem","owned","sansPrefix","buy","cancelListing","name","callback","SET_CALLBACK","PROCESS","MAYBE_PROCESS","TIMEOUT","ENQUEUE","RESOLVE","HANDLERS","INIT","ctx","put","Set","setInterval","sendSelf","letter","uid","hold","reply","update","n","add","h","need","reduce","acc","result","_","results","have","delete","collate","px","push","addresses","enqueue","spawn","expectReply","timeout","fetchAccountItem","createSaleOffer","ItemImage","useState","setItemImage","importedIcon","getImage","AccountItemCluster","accountItems","marketItems","forSale","sell","useAccountItem","listing","BUSY","WrappedAccountItemCluster","ml","MarketItemCluster","WrappedMarketItemCluster","MarketItemsCluster","length","WrappedMarketItemsCluster","AccountItemsCluster","WrappedAccountItemsCluster","MarketItemsCount","AccountItemsCount","l","MintButton","InfoBanner","kibs","type","title","text","Banner","message","my","config","window","ReactDOM","render","exact","path","component","useParams","withPrefix","useAddress","fontSize","display","fontWeight","variant","defaultIndex","BackPack","Cookie","document","getElementById"],"mappings":"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","file":"static/js/main.5f71b350.chunk.js","sourcesContent":["var map = {\n\t\"./item01.svg\": [\n\t\t159,\n\t\t4\n\t],\n\t\"./item02.svg\": [\n\t\t160,\n\t\t5\n\t],\n\t\"./item03.svg\": [\n\t\t161,\n\t\t6\n\t],\n\t\"./item04.svg\": [\n\t\t162,\n\t\t7\n\t],\n\t\"./item05.svg\": [\n\t\t163,\n\t\t8\n\t],\n\t\"./item06.svg\": [\n\t\t164,\n\t\t9\n\t],\n\t\"./item07.svg\": [\n\t\t165,\n\t\t10\n\t],\n\t\"./item08.svg\": [\n\t\t166,\n\t\t11\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 153;\nmodule.exports = webpackAsyncContext;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {extendTheme} from \"@chakra-ui/react\"\n\nconst theme = extendTheme({\n  fonts: {\n    body: \"'Montserrat', sans-serif\",\n    heading: \"'Montserrat', sans-serif\",\n  },\n  colors: {},\n})\n\nexport default theme\n","import React from \"react\"\nimport {RecoilRoot} from \"recoil\"\nimport {HashRouter as Router} from \"react-router-dom\"\nimport {ChakraProvider} from \"@chakra-ui/react\"\nimport theme from \"../theme.js\"\n\nexport function Providers({children}) {\n  return (\n    <React.StrictMode>\n      <RecoilRoot>\n        <ChakraProvider theme={theme}>\n          <Router>{children}</Router>\n        </ChakraProvider>\n      </RecoilRoot>\n    </React.StrictMode>\n  )\n}\n","export const Base = ({children}) => <div>{children}</div>\n","import {useEffect} from \"react\"\nimport {atom, useRecoilState} from \"recoil\"\nimport * as fcl from \"@onflow/fcl\"\n\nexport const currentUser = atom({\n  key: \"CURRENT_USER\",\n  default: {addr: null, loggedIn: null, cid: null},\n})\n\nconst tools = {\n  logIn: fcl.logIn,\n  logOut: fcl.unauthenticate,\n  signUp: fcl.signUp,\n  changeUser: fcl.reauthenticate,\n}\n\nexport function useCurrentUser() {\n  const [user, setUser] = useRecoilState(currentUser)\n  useEffect(() => fcl.currentUser().subscribe(setUser), [setUser])\n  return [user, user.addr != null, tools]\n}\n","export default __webpack_public_path__ + \"static/media/logo-kv.bbbfa163.svg\";","export const LOADING = \"LOADING\"\n\n// Exposed states of a Flow Transaction\nexport const IDLE = \"IDLE\"\nexport const PROCESSING = \"PROCESSING\"\nexport const SUCCESS = \"SUCCESS\"\nexport const ERROR = \"ERROR\"\n\n// How long to pause on a success or error message\n// before transitioning back to an IDLE state.\nexport const IDLE_DELAY = 1000\n","const fetcher = url => fetch(url).then(res => res.json())\n\nexport default fetcher\n","import {atom, useRecoilState} from \"recoil\"\nimport useSWR from \"swr\"\nimport {IDLE, LOADING} from \"../global/constants\"\nimport fetcher from \"../util/fetcher\"\nimport normalizeItem from \"../util/normalize-item\"\n\nexport const $marketItemsState = atom({\n  key: \"market-items::state\",\n  default: [],\n})\n\nexport const $marketItemsStatus = atom({\n  key: \"market-items::status\",\n  default: IDLE,\n})\n\nexport function useMarketItems() {\n  const url = process.env.REACT_APP_API_MARKET_ITEMS_LIST\n  const [status, setStatus] = useRecoilState($marketItemsStatus)\n  const [items, setItems] = useRecoilState($marketItemsState)\n\n  useSWR(url, fetcher, {\n    initialData: items,\n    refreshInterval: 10,\n    onLoadingSlow: () => {\n      setStatus(LOADING)\n    },\n    onSuccess: ({latestSaleOffers}) => {\n      setItems(latestSaleOffers.map(item => normalizeItem(item)))\n      setStatus(IDLE)\n    },\n    onError: error => {\n      console.log(\"Failed to fetch market items.\", error)\n    },\n  })\n\n  const asMap = new Map(items.map(item => [item.itemID, item]))\n\n  return {\n    status,\n    items,\n    has(item) {\n      return asMap.has(item.itemID)\n    },\n  }\n}\n","export default function normalizeItem(item) {\n  return Object.assign(\n    {},\n    {\n      itemID: item.sale_item_id,\n      typeID: item.sale_item_type,\n      owner: item.sale_item_owner,\n      price: item.sale_price,\n      txID: item.transaction_id,\n    }\n  )\n}\n","import * as fcl from \"@onflow/fcl\"\nimport {Address} from \"@onflow/types\"\n\nconst CODE = fcl.cdc`\n  import NonFungibleToken from 0xNonFungibleToken\n  import KittyItems from 0xKittyItems\n\n  pub fun main(address: Address): [UInt64] {\n    if let collection =  getAccount(address).getCapability<&KittyItems.Collection{NonFungibleToken.CollectionPublic, KittyItems.KittyItemsCollectionPublic}>(KittyItems.CollectionPublicPath).borrow() {\n      return collection.getIDs()\n    }\n\n    return []\n  }\n`\n\nexport function fetchAccountItems(address) {\n  if (address == null) return Promise.resolve([])\n\n  // prettier-ignore\n  return fcl.send([\n    fcl.script(CODE),\n    fcl.args([\n      fcl.arg(address, Address)\n    ]),\n  ]).then(fcl.decode).then(d => d.sort((a, b) => a - b))\n}\n","import {atomFamily, selectorFamily, useRecoilState} from \"recoil\"\nimport {fetchAccountItems} from \"../flow/fetch-account-items.script\"\nimport {IDLE, PROCESSING} from \"../global/constants\"\n\nexport const $state = atomFamily({\n  key: \"account-items::state\",\n  default: selectorFamily({\n    key: \"account-items::default\",\n    get: address => async () => fetchAccountItems(address),\n  }),\n})\n\nexport const $status = atomFamily({\n  key: \"account-items::status\",\n  default: IDLE,\n})\n\nexport function useAccountItems(address) {\n  const [items, setItems] = useRecoilState($state(address))\n  const [status, setStatus] = useRecoilState($status(address))\n\n  return {\n    ids: items,\n    status,\n\n    async mint() {\n      setStatus(PROCESSING)\n      await fetch(process.env.REACT_APP_API_KITTY_ITEM_MINT, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          recipient: address,\n          // Random typeID between 1 - 5\n          typeID: Math.floor(Math.random() * (5 - 1)) + 1,\n        }),\n      })\n      await fetchAccountItems(address).then(setItems)\n      setStatus(IDLE)\n    },\n    async refresh() {\n      setStatus(PROCESSING)\n      await fetchAccountItems(address).then(setItems)\n      setStatus(IDLE)\n    },\n  }\n}\n","import {send, decode, script, args, arg, cdc} from \"@onflow/fcl\"\nimport {Address} from \"@onflow/types\"\n\nconst CODE = cdc`\n  import FungibleToken from 0xFungibleToken\n  import NonFungibleToken from 0xNonFungibleToken\n  import Kibble from 0xKibble\n  import KittyItems from 0xKittyItems\n  import KittyItemsMarket from 0xKittyItemsMarket\n\n  pub fun hasKibble(_ address: Address): Bool {\n    let receiver: Bool = getAccount(address)\n      .getCapability<&Kibble.Vault{FungibleToken.Receiver}>(Kibble.ReceiverPublicPath)\n      .check()\n\n    let balance: Bool = getAccount(address)\n      .getCapability<&Kibble.Vault{FungibleToken.Balance}>(Kibble.BalancePublicPath)\n      .check()\n\n    return receiver && balance\n  }\n\n  pub fun hasKittyItems(_ address: Address): Bool {\n    return getAccount(address)\n      .getCapability<&KittyItems.Collection{NonFungibleToken.CollectionPublic, KittyItems.KittyItemsCollectionPublic}>(KittyItems.CollectionPublicPath)\n      .check()\n  }\n\n  pub fun hasKittyItemsMarket(_ address: Address): Bool {\n    return getAccount(address)\n      .getCapability<&KittyItemsMarket.Collection{KittyItemsMarket.CollectionPublic}>(KittyItemsMarket.CollectionPublicPath)\n      .check()\n  }\n\n  pub fun main(address: Address): {String: Bool} {\n    let ret: {String: Bool} = {}\n    ret[\"Kibble\"] = hasKibble(address)\n    ret[\"KittyItems\"] = hasKittyItems(address)\n    ret[\"KittyItemsMarket\"] = hasKittyItemsMarket(address)\n    return ret\n  }\n`\n\nexport function isAccountInitialized(address) {\n  if (address == null) return Promise.resolve(false)\n\n  // prettier-ignore\n  return send([\n    script(CODE),\n    args([\n      arg(address, Address)\n    ])\n  ]).then(decode)\n}\n","import * as fcl from \"@onflow/fcl\"\n\nconst noop = async () => {}\n\nexport async function tx(mods = [], opts = {}) {\n  const onStart = opts.onStart || noop\n  const onSubmission = opts.onSubmission || noop\n  const onUpdate = opts.onUpdate || noop\n  const onSuccess = opts.onSuccess || noop\n  const onError = opts.onError || noop\n  const onComplete = opts.onComplete || noop\n\n  try {\n    onStart()\n    var txId = await fcl.send(mods).then(fcl.decode)\n    console.info(\n      `%cTX[${txId}]: ${fvsTx(await fcl.config().get(\"env\"), txId)}`,\n      \"color:purple;font-weight:bold;font-family:monospace;\"\n    )\n    onSubmission(txId)\n    var unsub = await fcl.tx(txId).subscribe(onUpdate)\n    var txStatus = await fcl.tx(txId).onceSealed()\n    unsub()\n    console.info(\n      `%cTX[${txId}]: ${fvsTx(await fcl.config().get(\"env\"), txId)}`,\n      \"color:green;font-weight:bold;font-family:monospace;\"\n    )\n    await onSuccess(txStatus)\n    return txStatus\n  } catch (error) {\n    console.error(\n      `TX[${txId}]: ${fvsTx(await fcl.config().get(\"env\"), txId)}`,\n      error\n    )\n    onError(error)\n  } finally {\n    await onComplete()\n  }\n}\n\nfunction fvsTx(env, txId) {\n  return `https://flow-view-source.com/${env}/tx/${txId}`\n}\n","// prettier-ignore\nimport {transaction, limit, proposer, payer, authorizations, authz, cdc} from \"@onflow/fcl\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {tx} from \"./util/tx\"\n\nconst CODE = cdc`\n  import FungibleToken from 0xFungibleToken\n  import NonFungibleToken from 0xNonFungibleToken\n  import Kibble from 0xKibble\n  import KittyItems from 0xKittyItems\n  import KittyItemsMarket from 0xKittyItemsMarket\n\n  pub fun hasKibble(_ address: Address): Bool {\n    let receiver = getAccount(address)\n      .getCapability<&Kibble.Vault{FungibleToken.Receiver}>(Kibble.ReceiverPublicPath)\n      .check()\n\n    let balance = getAccount(address)\n      .getCapability<&Kibble.Vault{FungibleToken.Balance}>(Kibble.BalancePublicPath)\n      .check()\n\n    return receiver && balance\n  }\n\n  pub fun hasItems(_ address: Address): Bool {\n    return getAccount(address)\n      .getCapability<&KittyItems.Collection{NonFungibleToken.CollectionPublic, KittyItems.KittyItemsCollectionPublic}>(KittyItems.CollectionPublicPath)\n      .check()\n  }\n\n  pub fun hasMarket(_ address: Address): Bool {\n    return getAccount(address)\n      .getCapability<&KittyItemsMarket.Collection{KittyItemsMarket.CollectionPublic}>(KittyItemsMarket.CollectionPublicPath)\n      .check()\n  }\n\n  transaction {\n    prepare(acct: AuthAccount) {\n      if !hasKibble(acct.address) {\n        if acct.borrow<&Kibble.Vault>(from: Kibble.VaultStoragePath) == nil {\n          acct.save(<-Kibble.createEmptyVault(), to: Kibble.VaultStoragePath)\n        }\n        acct.unlink(Kibble.ReceiverPublicPath)\n        acct.unlink(Kibble.BalancePublicPath)\n        acct.link<&Kibble.Vault{FungibleToken.Receiver}>(Kibble.ReceiverPublicPath, target: Kibble.VaultStoragePath)\n        acct.link<&Kibble.Vault{FungibleToken.Balance}>(Kibble.BalancePublicPath, target: Kibble.VaultStoragePath)\n      }\n\n      if !hasItems(acct.address) {\n        if acct.borrow<&KittyItems.Collection>(from: KittyItems.CollectionStoragePath) == nil {\n          acct.save(<-KittyItems.createEmptyCollection(), to: KittyItems.CollectionStoragePath)\n        }\n        acct.unlink(KittyItems.CollectionPublicPath)\n        acct.link<&KittyItems.Collection{NonFungibleToken.CollectionPublic, KittyItems.KittyItemsCollectionPublic}>(KittyItems.CollectionPublicPath, target: KittyItems.CollectionStoragePath)\n      }\n\n      if !hasMarket(acct.address) {\n        if acct.borrow<&KittyItemsMarket.Collection>(from: KittyItemsMarket.CollectionStoragePath) == nil {\n          acct.save(<-KittyItemsMarket.createEmptyCollection(), to: KittyItemsMarket.CollectionStoragePath)\n        }\n        acct.unlink(KittyItemsMarket.CollectionPublicPath)\n        acct.link<&KittyItemsMarket.Collection{KittyItemsMarket.CollectionPublic}>(KittyItemsMarket.CollectionPublicPath, target:KittyItemsMarket.CollectionStoragePath)\n      }\n    }\n  }\n`\n\nexport async function initializeAccount(address, opts = {}) {\n  // prettier-ignore\n  invariant(address != null, \"Tried to initialize an account but no address was supplied\")\n\n  return tx(\n    [\n      transaction(CODE),\n      limit(70),\n      proposer(authz),\n      payer(authz),\n      authorizations([authz]),\n    ],\n    opts\n  )\n}\n","export function sleep(ms = 500) {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms)\n  })\n}\n","import * as fcl from \"@onflow/fcl\"\n\nexport function fetchFlowBalance(address) {\n  if (address == null) return Promise.resolve(null)\n  return fcl.account(address).then(d => d.balance)\n}\n","import {atomFamily, selectorFamily, useRecoilState} from \"recoil\"\nimport {fetchFlowBalance} from \"../flow/fetch-flow-balance.script\"\nimport {IDLE, PROCESSING} from \"../global/constants\"\n\nexport const valueAtom = atomFamily({\n  key: \"flow-balance::state\",\n  default: selectorFamily({\n    key: \"flow-balance::default\",\n    get: address => async () => fetchFlowBalance(address),\n  }),\n})\n\nexport const statusAtom = atomFamily({\n  key: \"flow-balance::status\",\n  default: IDLE,\n})\n\nexport function useFlowBalance(address) {\n  const [balance, setBalance] = useRecoilState(valueAtom(address))\n  const [status, setStatus] = useRecoilState(statusAtom(address))\n\n  return {\n    balance,\n    status,\n    async refresh() {\n      setStatus(PROCESSING)\n      await fetchFlowBalance(address).then(setBalance)\n      setStatus(IDLE)\n    },\n  }\n}\n","import {send, decode, script, args, arg, cdc} from \"@onflow/fcl\"\nimport {Address} from \"@onflow/types\"\n\nconst CODE = cdc`\n  import FungibleToken from 0xFungibleToken\n  import Kibble from 0xKibble\n\n  pub fun main(address: Address): UFix64? {\n    if let vault = getAccount(address).getCapability<&{FungibleToken.Balance}>(Kibble.BalancePublicPath).borrow() {\n      return vault.balance\n    }\n    return nil\n  }\n\n`\n\nexport function fetchKibblesBalance(address) {\n  if (address == null) return Promise.resolve(false)\n\n  // prettier-ignore\n  return send([\n    script(CODE),\n    args([\n      arg(address, Address)\n    ])\n  ]).then(decode)\n}\n","import {atomFamily, selectorFamily, useRecoilState} from \"recoil\"\nimport {fetchKibblesBalance} from \"../flow/fetch-kibbles-balance.script\"\nimport {IDLE, PROCESSING} from \"../global/constants\"\n\nexport const valueAtom = atomFamily({\n  key: \"kibbles-balance::state\",\n  default: selectorFamily({\n    key: \"kibbles-balance::default\",\n    get: address => async () => fetchKibblesBalance(address),\n  }),\n})\n\nexport const statusAtom = atomFamily({\n  key: \"kibbles-balance::status\",\n  default: IDLE,\n})\n\nexport function useKibblesBalance(address) {\n  const [balance, setBalance] = useRecoilState(valueAtom(address))\n  const [status, setStatus] = useRecoilState(statusAtom(address))\n\n  async function refresh() {\n    setStatus(PROCESSING)\n    await fetchKibblesBalance(address).then(setBalance)\n    setStatus(IDLE)\n  }\n\n  return {\n    balance,\n    status,\n    refresh,\n    async mint() {\n      setStatus(PROCESSING)\n      await fetch(process.env.REACT_APP_API_KIBBLE_MINT, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          recipient: address,\n          amount: 50.0,\n        }),\n      })\n      await fetchKibblesBalance(address).then(setBalance)\n      setStatus(IDLE)\n    },\n  }\n}\n","import {\n  atomFamily,\n  selectorFamily,\n  useRecoilState,\n  useRecoilValue,\n} from \"recoil\"\nimport {\n  LOADING,\n  IDLE,\n  PROCESSING,\n  SUCCESS,\n  ERROR,\n  IDLE_DELAY,\n} from \"../global/constants\"\nimport {isAccountInitialized} from \"../flow/is-account-initialized.script\"\nimport {initializeAccount} from \"../flow/initialize-account.tx\"\nimport {sleep} from \"../util/sleep\"\nimport {useFlowBalance} from \"./use-flow-balance.hook\"\nimport {useKibblesBalance} from \"./use-kibbles-balance.hook\"\n\nexport const $status = atomFamily({\n  key: \"init::status\",\n  default: IDLE,\n})\n\nexport const $init = atomFamily({\n  key: \"init::state\",\n  default: selectorFamily({\n    key: \"init::default\",\n    get: address => () => isAccountInitialized(address),\n  }),\n})\n\nexport const $computedInit = selectorFamily({\n  key: \"init::computed\",\n  get: address => async ({get}) => {\n    const all = get($init(address))\n    return all.Kibble && all.KittyItems && all.KittyItemsMarket\n  },\n})\n\nexport function useInitialized(address) {\n  const [init, setInit] = useRecoilState($init(address))\n  const isInitialized = useRecoilValue($computedInit(address))\n  const [status, setStatus] = useRecoilState($status(address))\n  const flow = useFlowBalance(address)\n  const kibble = useKibblesBalance(address)\n\n  function recheck() {\n    isAccountInitialized(address).then(setInit)\n  }\n\n  return {\n    ...init,\n    isInitialized,\n    status: isInitialized == null ? LOADING : status,\n    recheck,\n    async initialize() {\n      initializeAccount(address, {\n        onStart() {\n          setStatus(PROCESSING)\n        },\n        async onSuccess() {\n          recheck()\n          flow.refresh()\n          kibble.refresh()\n          setStatus(SUCCESS)\n        },\n        onError() {\n          setStatus(ERROR)\n        },\n        async onComplete() {\n          await sleep(IDLE_DELAY)\n          setStatus(IDLE)\n        },\n      })\n    },\n  }\n}\n","import {Suspense} from \"react\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\nimport {Link as A} from \"react-router-dom\"\nimport {\n  Flex,\n  Box,\n  Spacer,\n  Link,\n  Center,\n  HStack,\n  Heading,\n  Button,\n  Divider,\n  Image,\n} from \"@chakra-ui/react\"\n\nimport Logo from \"../svg/logo-kv.svg\"\n\nexport function AuthCluster() {\n  const [user, loggedIn, {signUp, logIn, logOut}] = useCurrentUser()\n\n  return loggedIn ? (\n    <Box mb=\"4\">\n      <Flex>\n        <HStack>\n          <Image src={Logo} />\n          <Heading size=\"lg\">Kitty Items</Heading>\n        </HStack>\n        <Spacer />\n        <Center>\n          <Link as={A} mr=\"4\" to={\"/\" + user.addr}>\n            {user.addr}\n          </Link>\n        </Center>\n        <Box>\n          <Button mr=\"4\" colorScheme=\"blue\" onClick={logOut}>\n            Log Out\n          </Button>\n        </Box>\n      </Flex>\n    </Box>\n  ) : (\n    <Box>\n      <Flex>\n        <Box p=\"2\">\n          <HStack>\n            <Image src={Logo} />\n            <Heading size=\"lg\">Kitty Items</Heading>\n          </HStack>\n        </Box>\n        <Spacer />\n        <Box>\n          <Button mr=\"4\" colorScheme=\"blue\" onClick={logIn}>\n            Log In\n          </Button>\n          <Button mr=\"4\" colorScheme=\"blue\" onClick={signUp}>\n            Sign Up\n          </Button>\n        </Box>\n      </Flex>\n      <Divider mb=\"4\" />\n    </Box>\n  )\n}\n\nexport default function WrappedAuthCluster() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <AuthCluster />\n    </Suspense>\n  )\n}\n","import {Suspense} from \"react\"\nimport {useInitialized} from \"../hooks/use-initialized.hook\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\nimport {IDLE} from \"../global/constants\"\nimport {\n  Box,\n  Button,\n  Table,\n  Tbody,\n  Tr,\n  Td,\n  Flex,\n  Heading,\n  Spinner,\n  Center,\n} from \"@chakra-ui/react\"\nimport {CheckIcon, CloseIcon} from \"@chakra-ui/icons\"\n\nconst fmtBool = bool =>\n  bool ? <CheckIcon color=\"green.500\" /> : <CloseIcon color=\"red.500\" />\n\nexport function InitCluster({address}) {\n  const init = useInitialized(address)\n  const [cu] = useCurrentUser()\n  if (address == null) return null\n\n  return (\n    <Box mb=\"4\">\n      <Box mb=\"2\">\n        <Flex>\n          <Heading size=\"md\" mr=\"4\">\n            Account Initialized?\n          </Heading>\n          {init.status !== IDLE && (\n            <Center>\n              <Spinner />\n            </Center>\n          )}\n        </Flex>\n      </Box>\n      <Box maxW=\"200px\" borderWidth=\"1px\" borderRadius=\"lg\">\n        <Table size=\"sm\">\n          <Tbody>\n            <Tr>\n              <Td>Kibble</Td>\n              <Td>{fmtBool(init.Kibble)}</Td>\n            </Tr>\n            <Tr>\n              <Td>Kitty Items</Td>\n              <Td>{fmtBool(init.KittyItems)}</Td>\n            </Tr>\n            <Tr>\n              <Td>Kitty Items Market</Td>\n              <Td>{fmtBool(init.KittyItemsMarket)}</Td>\n            </Tr>\n          </Tbody>\n        </Table>\n      </Box>\n      {!init.isInitialized && address === cu.addr && (\n        <Box mt=\"2\">\n          <Flex>\n            <Button\n              colorScheme=\"blue\"\n              disabled={init.status !== IDLE}\n              onClick={init.initialize}\n            >\n              Initialize Account\n            </Button>\n          </Flex>\n        </Box>\n      )}\n    </Box>\n  )\n}\n\nexport default function WrappedInitCluster(props) {\n  const [cu] = useCurrentUser()\n  if (cu.addr !== props.address) return null\n\n  return (\n    <Suspense\n      fallback={\n        <Box mb=\"2\">\n          <Flex>\n            <Heading size=\"md\" mr=\"4\">\n              Account Initialized?\n            </Heading>\n            <Center>\n              <Spinner size=\"sm\" />\n            </Center>\n          </Flex>\n        </Box>\n      }\n    >\n      <InitCluster {...props} />\n    </Suspense>\n  )\n}\n","export function fmtKibbles(balance, cur = false) {\n  if (balance == null) return null\n  return [\n    String(balance).replace(/0+$/, \"\").replace(/\\.$/, \"\"),\n    cur && \"KIBBLE\",\n  ]\n    .filter(Boolean)\n    .join(\" \")\n}\n","import {Suspense} from \"react\"\nimport {useFlowBalance} from \"../hooks/use-flow-balance.hook\"\nimport {useKibblesBalance} from \"../hooks/use-kibbles-balance.hook\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\nimport {IDLE} from \"../global/constants\"\nimport {fmtKibbles} from \"../util/fmt-kibbles\"\nimport {\n  Box,\n  Button,\n  Table,\n  Tbody,\n  Tr,\n  Td,\n  Flex,\n  Heading,\n  Spinner,\n  Center,\n} from \"@chakra-ui/react\"\nimport {useInitialized} from \"../hooks/use-initialized.hook\"\n\nexport function BalanceCluster({address}) {\n  const flow = useFlowBalance(address)\n  const kibbles = useKibblesBalance(address)\n  const init = useInitialized(address)\n  return (\n    <Box mb=\"4\">\n      <Box mb=\"2\">\n        <Flex>\n          <Heading size=\"md\" mr=\"4\">\n            Balances\n          </Heading>\n          {(flow.status !== IDLE || kibbles.status !== IDLE) && (\n            <Center>\n              <Spinner size=\"sm\" />\n            </Center>\n          )}\n        </Flex>\n      </Box>\n      <Box maxW=\"200px\" borderWidth=\"1px\" borderRadius=\"lg\">\n        <Table size=\"sm\">\n          <Tbody>\n            <Tr>\n              <Td>KIBBLE</Td>\n              {kibbles.status === IDLE ? (\n                <Td isNumeric>{fmtKibbles(kibbles.balance)}</Td>\n              ) : (\n                <Td isNumeric>\n                  <Spinner size=\"sm\" />\n                </Td>\n              )}\n            </Tr>\n          </Tbody>\n        </Table>\n      </Box>\n      <Box mt=\"2\">\n        <Flex>\n          <Button\n            colorScheme=\"blue\"\n            disabled={kibbles.status !== IDLE || !init.isInitialized}\n            onClick={kibbles.mint}\n          >\n            Request Meowr Kibbles\n          </Button>\n        </Flex>\n      </Box>\n    </Box>\n  )\n}\n\nexport default function WrappedBalanceCluster(props) {\n  const [cu] = useCurrentUser()\n  if (cu.addr !== props.address) return null\n\n  return (\n    <Suspense\n      fallback={\n        <Flex>\n          <Heading size=\"md\" mr=\"4\">\n            Balances\n          </Heading>\n          <Center>\n            <Spinner size=\"sm\" />\n          </Center>\n        </Flex>\n      }\n    >\n      <BalanceCluster {...props} />\n    </Suspense>\n  )\n}\n","import * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\"\n\nexport async function fetchMarketItem(address, id) {\n  return fcl\n    .send([\n      fcl.script`\n      import KittyItemsMarket from 0xKittyItemsMarket\n\n      pub struct SaleItem {\n        pub let itemID: UInt64\n        pub let typeID: UInt64\n        pub let owner: Address\n        pub let price: UFix64\n        \n\n        init(itemID: UInt64, typeID: UInt64, owner: Address, price: UFix64, ) {\n          self.itemID = itemID\n          self.typeID = typeID\n          self.owner = owner\n          self.price = price\n        }\n      }\n\n      pub fun main(address: Address, id: UInt64): SaleItem? {\n        if let collection = getAccount(address).getCapability<&KittyItemsMarket.Collection{KittyItemsMarket.CollectionPublic}>(KittyItemsMarket.CollectionPublicPath).borrow() {\n          if let item = collection.borrowSaleItem(itemID: id) {\n            return SaleItem(itemID: id, typeID: item.typeID, owner: address, price: item.price)\n          }\n        }\n        return nil\n      }\n    `,\n      fcl.args([fcl.arg(address, t.Address), fcl.arg(Number(id), t.UInt64)]),\n    ])\n    .then(fcl.decode)\n}\n","import * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\"\nimport {tx} from \"./util/tx\"\nimport {invariant} from \"@onflow/util-invariant\"\n\nconst CODE = fcl.cdc`\n  import FungibleToken from 0xFungibleToken\n  import NonFungibleToken from 0xNonFungibleToken\n  import Kibble from 0xKibble\n  import KittyItems from 0xKittyItems\n  import KittyItemsMarket from 0xKittyItemsMarket\n\n  transaction(itemID: UInt64, marketCollectionAddress: Address) {\n      let paymentVault: @FungibleToken.Vault\n      let kittyItemsCollection: &KittyItems.Collection{NonFungibleToken.Receiver}\n      let marketCollection: &KittyItemsMarket.Collection{KittyItemsMarket.CollectionPublic}\n\n      prepare(acct: AuthAccount) {\n          self.marketCollection = getAccount(marketCollectionAddress)\n              .getCapability<&KittyItemsMarket.Collection{KittyItemsMarket.CollectionPublic}>(KittyItemsMarket.CollectionPublicPath)\n              .borrow() ?? panic(\"Could not borrow market collection from market address\")\n\n          let price = self.marketCollection.borrowSaleItem(itemID: itemID)!.price\n\n          let mainKibbleVault = acct.borrow<&Kibble.Vault>(from: Kibble.VaultStoragePath)\n              ?? panic(\"Cannot borrow Kibble vault from acct storage\")\n          self.paymentVault <- mainKibbleVault.withdraw(amount: price)\n\n          self.kittyItemsCollection = acct.borrow<&KittyItems.Collection{NonFungibleToken.Receiver}>(\n              from: KittyItems.CollectionStoragePath\n          ) ?? panic(\"Cannot borrow KittyItems collection receiver from acct\")\n      }\n\n      execute {\n          self.marketCollection.purchase(\n              itemID: itemID,\n              buyerCollection: self.kittyItemsCollection,\n              buyerPayment: <- self.paymentVault\n          )\n      }\n  }\n`\n\n// prettier-ignore\nexport function buyMarketItem({itemID, ownerAddress}, opts = {}) {\n  invariant(itemID != null, \"buyMarketItem({itemID, ownerAddress}) -- itemID required\")\n  invariant(ownerAddress != null, \"buyMarketItem({itemID, ownerAddress}) -- ownerAddress required\")\n\n  return tx([\n    fcl.transaction(CODE),\n    fcl.args([\n      fcl.arg(Number(itemID), t.UInt64),\n      fcl.arg(String(ownerAddress), t.Address),\n    ]),\n    fcl.proposer(fcl.authz),\n    fcl.payer(fcl.authz),\n    fcl.authorizations([fcl.authz]),\n    fcl.limit(1000),\n  ], opts)\n}\n","import * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\"\nimport {tx} from \"./util/tx\"\nimport {invariant} from \"@onflow/util-invariant\"\n\nconst CODE = fcl.cdc`\n  import KittyItemsMarket from 0xKittyItemsMarket\n\n  transaction(itemID: UInt64) {\n      prepare(account: AuthAccount) {\n          let listing <- account\n            .borrow<&KittyItemsMarket.Collection>(from: KittyItemsMarket.CollectionStoragePath)!\n            .remove(itemID: itemID)\n          destroy listing\n      }\n  }\n`\n\n// prettier-ignore\nexport function cancelMarketListing({ itemID }, opts = {}) {\n  invariant(itemID != null, \"cancelMarketListing({itemID}) -- itemID required\")\n\n  return tx([\n    fcl.transaction(CODE),\n    fcl.args([\n      fcl.arg(Number(itemID), t.UInt64),\n    ]),\n    fcl.proposer(fcl.authz),\n    fcl.payer(fcl.authz),\n    fcl.authorizations([fcl.authz]),\n    fcl.limit(1000),\n  ], opts)\n}\n","import {useEffect} from \"react\"\nimport {atomFamily, selectorFamily, useRecoilState} from \"recoil\"\nimport {sansPrefix} from \"@onflow/fcl\"\nimport {IDLE, PROCESSING} from \"../global/constants\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\nimport {useAccountItems} from \"../hooks/use-account-items.hook\"\nimport {useKibblesBalance} from \"../hooks/use-kibbles-balance.hook\"\nimport {fetchMarketItem} from \"../flow/fetch-market-item.script\"\nimport {buyMarketItem} from \"../flow/buy-market-item.tx\"\nimport {cancelMarketListing} from \"../flow/cancel-market-listing.tx\"\n\nfunction expand(key) {\n  return key.split(\"|\")\n}\n\nfunction comp(address, id) {\n  return [address, id].join(\"|\")\n}\n\nexport const $state = atomFamily({\n  key: \"market-item::state\",\n  default: selectorFamily({\n    key: \"market-item::default\",\n    get: key => async () => await fetchMarketItem(...expand(key)),\n  }),\n})\n\nexport const $status = atomFamily({\n  key: \"market-item::status\",\n  default: IDLE,\n})\n\nexport function useMarketItem(address, id) {\n  const [cu] = useCurrentUser()\n  const ownerItems = useAccountItems(address)\n  const cuItems = useAccountItems(cu.addr)\n  const kibble = useKibblesBalance(cu.addr)\n  const key = comp(address, id)\n  const [item, setItem] = useRecoilState($state(key))\n  const [status, setStatus] = useRecoilState($status(key))\n  const owned = sansPrefix(cu.addr) === sansPrefix(address)\n\n  useEffect(() => {\n    fetchMarketItem(...expand(key)).then(setItem)\n  }, [])\n\n  return {\n    ...item,\n    status,\n    owned,\n    async buy() {\n      await buyMarketItem(\n        {itemID: id, ownerAddress: address},\n        {\n          onStart() {\n            setStatus(PROCESSING)\n          },\n          async onSuccess() {\n            if (address !== cu.addr) {\n              ownerItems.refresh()\n            }\n            cuItems.refresh()\n            kibble.refresh()\n          },\n          async onComplete() {\n            setStatus(IDLE)\n          },\n          async onError(error) {\n            // TODO: Handle error\n          },\n        }\n      )\n    },\n    async cancelListing() {\n      await cancelMarketListing(\n        {itemID: id},\n        {\n          onStart() {\n            setStatus(PROCESSING)\n          },\n          async onSuccess() {\n            cuItems.refresh()\n            kibble.refresh()\n          },\n          async onComplete() {\n            setStatus(IDLE)\n          },\n          async onError(error) {\n            // TODO: Handle error\n          },\n        }\n      )\n    },\n    async refresh() {\n      setStatus(PROCESSING)\n      await fetchMarketItem(...expand(key)).then(setItem)\n      setStatus(IDLE)\n    },\n  }\n}\n","// TODO: MOVE TO @onflow/util-batch\nimport {spawn, send, INIT} from \"@onflow/util-actor\"\nimport {uid} from \"@onflow/util-uid\"\n\nconst TICK = 500\nconst BUFFER_SIZE = 10\n\nconst SET_CALLBACK = \"SET_CALLBACK\"\nconst PROCESS = \"PROCESS\"\nconst MAYBE_PROCESS = \"MAYBE_PROCESS\"\nconst TIMEOUT = \"TIMEOUT\"\nconst ENQUEUE = \"ENQUEUE\"\nconst RESOLVE = \"RESOLVE\"\n\nconst HANDLERS = {\n  [INIT]: ctx => {\n    ctx.put(\"need\", new Set())\n    ctx.put(\"processing\", new Set())\n    ctx.put(\"hold\", {})\n    setInterval(() => ctx.sendSelf(TIMEOUT), TICK)\n  },\n\n  [SET_CALLBACK]: (ctx, letter, callback) => {\n    ctx.put(\"callback\", async (...args) => callback(...args))\n    ctx.sendSelf(MAYBE_PROCESS)\n  },\n\n  [ENQUEUE]: (ctx, letter, args) => {\n    const id = uid()\n    const hold = {id, args, reply: letter.reply}\n    ctx.update(\"need\", n => {\n      n.add(id)\n      return n\n    })\n    ctx.update(\"hold\", h => ({...h, [id]: hold}))\n    ctx.sendSelf(MAYBE_PROCESS)\n  },\n\n  [TIMEOUT]: ctx => {\n    if (ctx.get(\"need\").size) ctx.sendSelf(PROCESS)\n  },\n\n  [MAYBE_PROCESS]: ctx => {\n    if (ctx.get(\"need\") >= BUFFER_SIZE) ctx.sendSelf(PROCESS)\n  },\n\n  [PROCESS]: ctx => {\n    const callback = ctx.get(\"callback\")\n    if (typeof callback !== \"function\") return\n\n    const need = ctx.get(\"need\")\n    ctx.update(\"processing\", p => new Set([...p, ...need]))\n    ctx.put(\"need\", new Set())\n\n    const hold = ctx.get(\"hold\")\n    const payload = [...need].reduce(\n      (acc, key) => ({...acc, [key]: hold[key].args}),\n      {}\n    )\n\n    callback(payload).then(result => {\n      ctx.sendSelf(RESOLVE, result)\n    })\n  },\n  [RESOLVE]: (ctx, _, results) => {\n    const have = Object.keys(results)\n    for (let h of have) {\n      const hold = ctx.get(\"hold\")\n      hold[h].reply(results[h])\n      ctx.update(\"processing\", p => {\n        p.delete(h)\n        return p\n      })\n      ctx.update(\"hold\", hold => {\n        delete hold[h]\n        return hold\n      })\n    }\n  },\n}\n\nexport const batch = (name, callback) => {\n  spawn(HANDLERS, name)\n  send(name, SET_CALLBACK, callback)\n\n  return {\n    enqueue(...args) {\n      return send(name, ENQUEUE, args, {expectReply: true, timeout: 0})\n    },\n  }\n}\n","import * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\"\nimport {batch} from \"./util/batch\"\n\nconst CODE = fcl.cdc`\nimport NonFungibleToken from 0xNonFungibleToken\nimport KittyItems from 0xKittyItems\n\npub struct AccountItem {\n  pub let itemID: UInt64\n  pub let typeID: UInt64\n  pub let owner: Address\n\n  init(itemID: UInt64, typeID: UInt64, owner: Address) {\n    self.itemID = itemID\n    self.typeID = typeID\n    self.owner = owner\n  }\n}\n\npub fun fetch(address: Address, id: UInt64): AccountItem? {\n  if let col = getAccount(address).getCapability<&KittyItems.Collection{NonFungibleToken.CollectionPublic, KittyItems.KittyItemsCollectionPublic}>(KittyItems.CollectionPublicPath).borrow() {\n    if let item = col.borrowKittyItem(id: id) {\n      return AccountItem(itemID: id, typeID: item.typeID, owner: address)\n    }\n  }\n\n  return nil\n}\n\npub fun main(keys: [String], addresses: [Address], ids: [UInt64]): {String: AccountItem?} {\n  let r: {String: AccountItem?} = {}\n  var i = 0\n  while i < keys.length {\n    let key = keys[i]\n    let address = addresses[i]\n    let id = ids[i]\n    r[key] = fetch(address: address, id: id)\n    i = i + 1\n  }\n  return r\n}\n`\n\nconst collate = px => {\n  return Object.keys(px).reduce(\n    (acc, key) => {\n      acc.keys.push(key)\n      acc.addresses.push(px[key][0])\n      acc.ids.push(px[key][1])\n      return acc\n    },\n    {keys: [], addresses: [], ids: []}\n  )\n}\n\nconst {enqueue} = batch(\"FETCH_ACCOUNT_ITEM\", async px => {\n  const {keys, addresses, ids} = collate(px)\n\n  return fcl\n    .send([\n      fcl.script(CODE),\n      fcl.args([\n        fcl.arg(keys, t.Array(t.String)),\n        fcl.arg(addresses, t.Array(t.Address)),\n        fcl.arg(ids.map(Number), t.Array(t.UInt64)),\n      ]),\n    ])\n    .then(fcl.decode)\n})\n\nexport async function fetchAccountItem(address, id) {\n  if (address == null) return Promise.resolve(null)\n  if (id == null) return Promise.resolve(null)\n  return enqueue(address, id)\n}\n","import * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\"\nimport {tx} from \"./util/tx\"\n\nconst CODE = fcl.cdc`\n  import FungibleToken from 0xFungibleToken\n  import NonFungibleToken from 0xNonFungibleToken\n  import Kibble from 0xKibble\n  import KittyItems from 0xKittyItems\n  import KittyItemsMarket from 0xKittyItemsMarket\n\n  transaction(itemID: UInt64, price: UFix64) {\n    let kibbleVault: Capability<&Kibble.Vault{FungibleToken.Receiver}>\n    let kittyItemsCollection: Capability<&KittyItems.Collection{NonFungibleToken.Provider, KittyItems.KittyItemsCollectionPublic}>\n    let marketCollection: &KittyItemsMarket.Collection\n\n    prepare(signer: AuthAccount) {\n        // we need a provider capability, but one is not provided by default so we create one.\n        let KittyItemsCollectionProviderPrivatePath = /private/kittyItemsCollectionProvider\n\n        self.kibbleVault = signer.getCapability<&Kibble.Vault{FungibleToken.Receiver}>(Kibble.ReceiverPublicPath)!\n        assert(self.kibbleVault.borrow() != nil, message: \"Missing or mis-typed Kibble receiver\")\n\n        if !signer.getCapability<&KittyItems.Collection{NonFungibleToken.Provider, KittyItems.KittyItemsCollectionPublic}>(KittyItemsCollectionProviderPrivatePath)!.check() {\n            signer.link<&KittyItems.Collection{NonFungibleToken.Provider, KittyItems.KittyItemsCollectionPublic}>(KittyItemsCollectionProviderPrivatePath, target: KittyItems.CollectionStoragePath)\n        }\n\n        self.kittyItemsCollection = signer.getCapability<&KittyItems.Collection{NonFungibleToken.Provider, KittyItems.KittyItemsCollectionPublic}>(KittyItemsCollectionProviderPrivatePath)!\n        assert(self.kittyItemsCollection.borrow() != nil, message: \"Missing or mis-typed KittyItemsCollection provider\")\n\n        self.marketCollection = signer.borrow<&KittyItemsMarket.Collection>(from: KittyItemsMarket.CollectionStoragePath)\n            ?? panic(\"Missing or mis-typed KittyItemsMarket Collection\")\n    }\n\n    execute {\n        let offer <- KittyItemsMarket.createSaleOffer (\n            sellerItemProvider: self.kittyItemsCollection,\n            itemID: itemID,\n            typeID: self.kittyItemsCollection.borrow()!.borrowKittyItem(id: itemID)!.typeID,\n            sellerPaymentReceiver: self.kibbleVault,\n            price: price\n        )\n        self.marketCollection.insert(offer: <-offer)\n    }\n}\n`\n\nexport function createSaleOffer({itemID, price}, opts = {}) {\n  if (itemID == null)\n    throw new Error(\"createSaleOffer(itemID, price) -- itemID required\")\n  if (price == null)\n    throw new Error(\"createSaleOffer(itemID, price) -- price required\")\n\n  // prettier-ignore\n  return tx([\n    fcl.transaction(CODE),\n    fcl.args([\n      fcl.arg(Number(itemID), t.UInt64),\n      fcl.arg(String(price), t.UFix64),\n    ]),\n    fcl.proposer(fcl.authz),\n    fcl.payer(fcl.authz),\n    fcl.authorizations([\n      fcl.authz\n    ]),\n    fcl.limit(1000)\n  ], opts)\n}\n","import {sansPrefix} from \"@onflow/fcl\"\nimport {atomFamily, selectorFamily, useRecoilState} from \"recoil\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\nimport {fetchAccountItem} from \"../flow/fetch-account-item.script\"\nimport {createSaleOffer} from \"../flow/create-sale-offer.tx\"\nimport {IDLE, PROCESSING} from \"../global/constants\"\nimport {useAccountItems} from \"../hooks/use-account-items.hook\"\nimport {useMarketItems} from \"../hooks/use-market-items.hook\"\n\nfunction expand(key) {\n  return key.split(\"|\")\n}\n\nfunction comp(address, id) {\n  return [address, id].join(\"|\")\n}\n\nexport const $state = atomFamily({\n  key: \"account-item::state\",\n  default: selectorFamily({\n    key: \"account-item::default\",\n    get: key => async () => fetchAccountItem(...expand(key)),\n  }),\n})\n\nexport const $status = atomFamily({\n  key: \"account-item::status\",\n  default: IDLE,\n})\n\nexport function useAccountItem(address, id) {\n  const [cu] = useCurrentUser()\n  const accountItems = useAccountItems(address)\n  const marketItems = useMarketItems()\n  const key = comp(address, id)\n  const [item, setItem] = useRecoilState($state(key))\n  const [status, setStatus] = useRecoilState($status(key))\n\n  return {\n    ...item,\n    status,\n    forSale: marketItems.has(item),\n    owned: sansPrefix(cu.addr) === sansPrefix(address),\n    async sell(price) {\n      await createSaleOffer(\n        {itemID: id, price: price},\n        {\n          onStart() {\n            setStatus(PROCESSING)\n          },\n          async onSuccess() {\n            accountItems.refresh()\n          },\n          async onComplete() {\n            setStatus(IDLE)\n          },\n          async onError(error) {\n            // TODO: Handle error\n          },\n        }\n      )\n    },\n    async refresh() {\n      setStatus(PROCESSING)\n      await fetchAccountItem(...expand(key)).then(setItem)\n      setStatus(IDLE)\n    },\n  }\n}\n","import React, {useEffect, useState, Suspense} from \"react\"\nimport {useAccountItem} from \"../hooks/use-account-item.hook\"\nimport {useMarketItem} from \"../hooks/use-market-item.hook\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\nimport {IDLE} from \"../global/constants\"\nimport {\n  Tr,\n  Td,\n  Button,\n  Spinner,\n  Flex,\n  Center,\n  Text,\n  Image,\n  HStack,\n} from \"@chakra-ui/react\"\n\nexport const ItemImage = ({typeID}) => {\n  // Lazy load SVG images for the kitty items.\n  let [item, setItemImage] = useState(\"\")\n\n  useEffect(() => {\n    async function getImage() {\n      let importedIcon = await import(`../svg/Items/item0${typeID}.svg`)\n      setItemImage(importedIcon.default)\n    }\n    if (typeID) getImage()\n  }, [typeID])\n\n  return <Image maxW=\"64px\" src={item} />\n}\n\nexport function AccountItemCluster({address, id}) {\n  const item = useAccountItem(address, id)\n  const listing = useMarketItem(address, id)\n  const [cu] = useCurrentUser()\n\n  const BUSY = item.status !== IDLE || listing.status !== IDLE\n\n  if (address == null) return null\n  if (id == null) return null\n\n  return (\n    <Tr>\n      <Td maxW=\"50px\">\n        <Flex>\n          <Text as={item.forSale && \"del\"}>#{item.itemID}</Text>\n        </Flex>\n      </Td>\n      <Td>({item.typeID})</Td>\n      <Td>\n        <ItemImage typeID={item.typeID} />\n      </Td>\n      {cu.addr === address && (\n        <>\n          {!item.forSale ? (\n            <Td isNumeric>\n              <Button\n                colorScheme=\"blue\"\n                size=\"sm\"\n                disabled={BUSY}\n                onClick={() => item.sell(\"10.0\")}\n              >\n                <HStack>\n                  {BUSY && <Spinner mr=\"2\" size=\"xs\" />}{\" \"}\n                  <Text>List for 10 KIBBLE</Text>\n                </HStack>\n              </Button>\n            </Td>\n          ) : (\n            <Td isNumeric>\n              <Button\n                size=\"sm\"\n                colorScheme=\"orange\"\n                disabled={BUSY}\n                onClick={listing.cancelListing}\n              >\n                <HStack>\n                  {BUSY && <Spinner mr=\"2\" size=\"xs\" />} <Text>Unlist</Text>\n                </HStack>\n              </Button>\n            </Td>\n          )}\n        </>\n      )}\n    </Tr>\n  )\n}\n\nexport default function WrappedAccountItemCluster(props) {\n  return (\n    <Suspense\n      fallback={\n        <Tr>\n          <Td>\n            <Flex>\n              <Text>#{props.id}</Text>\n              <Center ml=\"4\">\n                <Spinner size=\"xs\" />\n              </Center>\n            </Flex>\n          </Td>\n          <Td />\n          <Td />\n          <Td />\n        </Tr>\n      }\n    >\n      <AccountItemCluster {...props} />\n    </Suspense>\n  )\n}\n","import {Suspense} from \"react\"\nimport {useMarketItem} from \"../hooks/use-market-item.hook\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\nimport {IDLE} from \"../global/constants\"\nimport {\n  Tr,\n  Td,\n  Button,\n  Spinner,\n  Flex,\n  Center,\n  Text,\n  HStack,\n} from \"@chakra-ui/react\"\n\nimport {ItemImage} from \"./account-item-cluster.comp\"\n\nexport function MarketItemCluster({address, id}) {\n  const [cu, loggedIn] = useCurrentUser()\n  const item = useMarketItem(address, id)\n\n  const BUSY = item.status !== IDLE || item.status !== IDLE\n\n  return (\n    <Tr>\n      <Td maxW=\"50px\">\n        <Flex>\n          <Text>#{item.itemID}</Text>\n        </Flex>\n      </Td>\n      <Td>({item.typeID})</Td>\n      <Td>\n        <ItemImage typeID={item.typeID} />\n      </Td>\n      <Td>{item.price}</Td>\n      {loggedIn && (\n        <>\n          {item.owner === cu.addr ? (\n            <Td isNumeric>\n              <Button\n                colorScheme=\"orange\"\n                size=\"sm\"\n                disabled={BUSY}\n                onClick={item.cancelListing}\n              >\n                <HStack>\n                  {BUSY && <Spinner mr=\"2\" size=\"xs\" />}\n                  <Text>Unlist</Text>\n                </HStack>\n              </Button>\n            </Td>\n          ) : (\n            <Td isNumeric>\n              <Button\n                colorScheme=\"blue\"\n                size=\"sm\"\n                disabled={BUSY}\n                onClick={item.buy}\n              >\n                <HStack>\n                  {BUSY && <Spinner mr=\"2\" size=\"xs\" />}\n                  <Text>Buy</Text>\n                </HStack>\n              </Button>\n            </Td>\n          )}\n        </>\n      )}\n    </Tr>\n  )\n}\n\nexport default function WrappedMarketItemCluster(props) {\n  return (\n    <Suspense\n      fallback={\n        <Tr>\n          <Td maxW=\"50px\">\n            <Flex>\n              <Text>#{props.id}</Text>\n              <Center ml=\"4\">\n                <Spinner size=\"xs\" />\n              </Center>\n            </Flex>\n          </Td>\n          <Td />\n          <Td />\n        </Tr>\n      }\n    >\n      <MarketItemCluster {...props} />\n    </Suspense>\n  )\n}\n","import {Suspense} from \"react\"\nimport {useMarketItems} from \"../hooks/use-market-items.hook\"\nimport Item from \"./market-item-cluster.comp\"\nimport {Box, Table, Thead, Tbody, Tr, Th, Text, Spinner} from \"@chakra-ui/react\"\n\nexport function MarketItemsCluster() {\n  const {items, status} = useMarketItems()\n\n  if (items.length <= 0)\n    return (\n      <Box borderWidth=\"1px\" borderRadius=\"lg\" p=\"4\">\n        <Text>No Items Listed For Sale</Text>\n      </Box>\n    )\n\n  return (\n    <Box borderWidth=\"1px\" borderRadius=\"lg\">\n      <Table size=\"sm\">\n        <Thead>\n          <Tr>\n            <Th>Id</Th>\n            <Th>Type</Th>\n            <Th>Image</Th>\n            <Th>Price</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {items.map(item => (\n            <Item\n              key={item.itemID}\n              id={item.itemID}\n              address={item.owner}\n              status={status}\n            />\n          ))}\n        </Tbody>\n      </Table>\n    </Box>\n  )\n}\n\nexport default function WrappedMarketItemsCluster() {\n  return (\n    <Suspense\n      fallback={\n        <Box borderWidth=\"1px\" borderRadius=\"lg\" p=\"4\">\n          <Spinner />\n        </Box>\n      }\n    >\n      <MarketItemsCluster />\n    </Suspense>\n  )\n}\n","import {Suspense} from \"react\"\nimport {useAccountItems} from \"../hooks/use-account-items.hook\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\nimport Item from \"./account-item-cluster.comp\"\nimport {Box, Table, Thead, Tbody, Tr, Th, Text, Spinner} from \"@chakra-ui/react\"\n\nexport function AccountItemsCluster({address}) {\n  const items = useAccountItems(address)\n  const [cu] = useCurrentUser()\n\n  if (address == null) return null\n\n  if (items.ids.length <= 0)\n    return (\n      <Box borderWidth=\"1px\" borderRadius=\"lg\" p=\"4\">\n        <Text>No Items</Text>\n      </Box>\n    )\n\n  return (\n    <Box borderWidth=\"1px\" borderRadius=\"lg\">\n      <Table size=\"sm\">\n        <Thead>\n          <Tr>\n            <Th>Id</Th>\n            <Th>Type</Th>\n            <Th>Image</Th>\n            {cu.addr === address && <Th />}\n          </Tr>\n        </Thead>\n        <Tbody>\n          {items.ids.map(id => (\n            <Item key={id} id={id} address={address} />\n          ))}\n        </Tbody>\n      </Table>\n    </Box>\n  )\n}\n\nexport default function WrappedAccountItemsCluster({address}) {\n  return (\n    <Suspense\n      fallback={\n        <Box borderWidth=\"1px\" borderRadius=\"lg\" p=\"4\">\n          <Spinner />\n        </Box>\n      }\n    >\n      <AccountItemsCluster address={address} />\n    </Suspense>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/cookie.535f383e.svg\";","export default __webpack_public_path__ + \"static/media/backpack.d215b272.svg\";","import {Suspense} from \"react\"\nimport {Base} from \"../../parts/base.comp\"\nimport {IDLE} from \"../../global/constants\"\nimport {useAddress} from \"../../hooks/use-url-address.hook\"\nimport {useCurrentUser} from \"../../hooks/use-current-user.hook\"\nimport {useMarketItems} from \"../../hooks/use-market-items.hook\"\nimport {useAccountItems} from \"../../hooks/use-account-items.hook\"\nimport {useInitialized} from \"../../hooks/use-initialized.hook\"\nimport {useKibblesBalance} from \"../../hooks/use-kibbles-balance.hook\"\nimport AuthCluster from \"../../parts/auth-cluster.comp\"\nimport InitCluster from \"../../parts/init-cluster.comp\"\nimport BalanceCluster from \"../../parts/balance-cluster.comp\"\nimport MarketItemsCluster from \"../../parts/market-items-cluster.comp\"\nimport AccountItemsCluster from \"../../parts/account-items-cluster.comp\"\nimport {\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  Box,\n  Badge,\n  Flex,\n  Center,\n  Tag,\n  Text,\n  Tabs,\n  TabList,\n  Tab,\n  TabPanels,\n  TabPanel,\n  Spinner,\n  Button,\n  HStack,\n  Image,\n} from \"@chakra-ui/react\"\n\nimport Cookie from \"../../svg/cookie.svg\"\nimport BackPack from \"../../svg/backpack.svg\"\n\nexport function MarketItemsCount() {\n  let l = 0\n  return l > 0 ? <Tag ml=\"1\">{l}</Tag> : null\n}\n\nexport function AccountItemsCount({address}) {\n  const items = useAccountItems(address)\n  if (items.status !== IDLE) return <Spinner size=\"xs\" ml=\"1\" />\n  const l = items?.ids?.length ?? 0\n  return l > 0 ? <Tag ml=\"1\">{l}</Tag> : null\n}\n\nexport function StoreItemsCount() {\n  const items = useMarketItems()\n  if (items.status !== IDLE) return <Spinner size=\"xs\" ml=\"1\" />\n  const l = items?.ids?.length ?? 0\n  return l > 0 ? <Tag ml=\"1\">{l}</Tag> : null\n}\n\nexport function MintButton({address}) {\n  const items = useAccountItems(address)\n\n  return (\n    <Button disabled={items.status !== IDLE} onClick={items.mint}>\n      Mint Item\n    </Button>\n  )\n}\n\nexport function InfoBanner({address}) {\n  const init = useInitialized(address)\n  const kibs = useKibblesBalance(address)\n  const [cu] = useCurrentUser()\n\n  const status = {\n    notInitialized: {\n      type: \"info\",\n      title: \"Initialize Your Account\",\n      text:\n        \"You need to initialize your account before you can receive Kibble.\",\n    },\n    noKibble: {\n      type: \"info\",\n      title: \"Get Kibble\",\n      text: \"You need Kibble to buy Kitty Items.\",\n    },\n  }\n\n  function Banner(message) {\n    return (\n      <Flex my=\"4\">\n        <Alert status={message.type}>\n          <AlertIcon />\n          <AlertTitle mr={2}>{message.title}</AlertTitle>\n          {message.text}\n        </Alert>\n      </Flex>\n    )\n  }\n\n  switch (true) {\n    case !init.isInitialized && cu.addr === address:\n      return Banner(status.notInitialized)\n    case kibs.balance < 0 && cu.addr === address:\n      return Banner(status.noKibble)\n    default:\n      return null\n  }\n}\n\nexport function Page() {\n  const address = useAddress()\n  const [cu] = useCurrentUser()\n  if (address == null) return <div>Not Found</div>\n\n  return (\n    <Base>\n      <Box p=\"4\">\n        <AuthCluster />\n        <Flex mb=\"4\">\n          <Center>\n            <Text mr=\"4\" fontSize=\"2xl\" color=\"purple.500\">\n              Account:{\" \"}\n              <Text display=\"inline\" color=\"black\" fontWeight=\"bold\">\n                {address}\n              </Text>\n            </Text>\n          </Center>\n          {address === cu.addr && (\n            <Center>\n              <Badge ml=\"4\" variant=\"outline\" colorScheme=\"orange\">\n                You\n              </Badge>\n            </Center>\n          )}\n        </Flex>\n        <Suspense fallback={null}>\n          <InfoBanner address={address} />\n        </Suspense>\n        <Flex>\n          <Box>\n            <InitCluster address={address} />\n          </Box>\n          <Box ml=\"4\">\n            <BalanceCluster address={address} />\n          </Box>\n          {cu.addr === address && (\n            <Box ml=\"4\">\n              <Suspense fallback={null}>\n                <MintButton address={address} />\n              </Suspense>\n            </Box>\n          )}\n        </Flex>\n        <Tabs colorScheme=\"pink\" defaultIndex={0}>\n          <TabList>\n            <Tab fontSize=\"2xl\">\n              <HStack>\n                <Image src={BackPack} />\n                <Box>{cu.addr === address ? \"My\" : \"User\"} Items</Box>\n              </HStack>\n              <Suspense fallback={null}>\n                <AccountItemsCount address={address} />\n              </Suspense>\n            </Tab>\n            <Tab fontSize=\"2xl\">\n              <HStack>\n                <Image src={Cookie} />\n                <Box>Items Marketplace</Box>\n              </HStack>\n              <Suspense fallback={null}>\n                <MarketItemsCount />\n              </Suspense>\n            </Tab>\n          </TabList>\n\n          <TabPanels>\n            <TabPanel>\n              <AccountItemsCluster address={address} />\n            </TabPanel>\n            <TabPanel>\n              <MarketItemsCluster />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Base>\n  )\n}\n","import {config} from \"@onflow/fcl\"\n\nconfig()\n  .put(\"env\", process.env.REACT_APP_CHAIN_ENV)\n  .put(\"accessNode.api\", process.env.REACT_APP_ACCESS_NODE)\n  .put(\"challenge.handshake\", process.env.REACT_APP_WALLET_DISCOVERY)\n  .put(\"0xFungibleToken\", process.env.REACT_APP_CONTRACT_FUNGIBLE_TOKEN)\n  .put(\"0xNonFungibleToken\", process.env.REACT_APP_CONTRACT_NON_FUNGIBLE_TOKEN)\n  .put(\"0xKibble\", process.env.REACT_APP_CONTRACT_KIBBLE)\n  .put(\"0xKittyItemsMarket\", process.env.REACT_APP_CONTRACT_KITTY_ITEMS_MARKET)\n  .put(\"0xKittyItems\", process.env.REACT_APP_CONTRACT_KITTY_ITEMS)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport {Switch, Route} from \"react-router-dom\"\n\nimport {Providers} from \"./global/providers.comp\"\n\nimport {Page as Root} from \"./pages/root.page\"\nimport {Page as Account} from \"./pages/account\"\nimport {Page as NotFound} from \"./pages/not-found.page\"\n\nimport * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\"\n\nimport \"./global/config\"\n\nimport \"./font.css\"\n\nwindow.fcl = fcl\nwindow.t = t\n\nReactDOM.render(\n  <Providers>\n    <Switch>\n      <Route exact path=\"/0x:address\" component={Account} />\n      <Route exact path=\"/\" component={Root} />\n      <Route component={NotFound} />\n    </Switch>\n  </Providers>,\n  document.getElementById(\"root\")\n)\n\nreportWebVitals()\n","import {withPrefix} from \"@onflow/fcl\"\nimport {useParams} from \"react-router-dom\"\n\nexport function useAddress() {\n  const {address} = useParams()\n  return withPrefix(address)\n}\n","import {Base} from \"../parts/base.comp\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\nimport {Redirect} from \"react-router-dom\"\nimport {\n  Box,\n  Button,\n  Flex,\n  Center,\n  Heading,\n  Spacer,\n  HStack,\n  Image,\n} from \"@chakra-ui/react\"\n\nimport Logo from \"../svg/logo-kv.svg\"\n\nexport function Page() {\n  const [user, loggedIn, {signUp, logIn}] = useCurrentUser()\n\n  if (loggedIn) return <Redirect to={\"/\" + user.addr} />\n\n  return (\n    <Base>\n      <Box p=\"4\">\n        <Flex>\n          <Center mr=\"4\">\n            <HStack>\n              <Image src={Logo} />\n              <Heading size=\"lg\">Kitty Items</Heading>\n            </HStack>\n          </Center>\n          <Spacer />\n          <Button mr=\"4\" colorScheme=\"blue\" onClick={logIn}>\n            Log In\n          </Button>\n          <Button mr=\"4\" colorScheme=\"blue\" onClick={signUp}>\n            Sign Up\n          </Button>\n        </Flex>\n      </Box>\n    </Base>\n  )\n}\n","import {Base} from \"../parts/base.comp\"\n\nexport function Page() {\n  return <Base>Page: Not Found</Base>\n}\n"],"sourceRoot":""}